# -- Listens for HTTP connections on port 80. Redirects these connections to HTTPS --
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name ${SITE_FQDN};

    return 301 https://$host$request_uri;
}


# -- Listens for HTTPS connections and handles them --
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    listen 8009;
    http2  on;

    server_name ${SITE_FQDN};

    ssl_certificate     /etc/ssl/certs/${SITE_CERT};
    ssl_certificate_key /etc/ssl/private/${SITE_KEY};

    limit_req zone=req_per_ip burst=20;

    location / {
        proxy_pass http://backend;  # Forward requests to upstream
        proxy_http_version 1.1;     # Use HTTP 1.1 for upstream communication

        # Forward request receiving headers to the upstream
        proxy_set_header  Host              $host;
        proxy_set_header  X-Real-IP         $remote_addr;
        proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Proto $scheme;

        # Allow upgrade connection to websocket in case its needed
        proxy_set_header  Upgrade           $http_upgrade;
        proxy_set_header  Connection        "upgrade";

        # Define upstream timeout configurations
        proxy_connect_timeout 5s;
        proxy_read_timeout   30s;
        proxy_send_timeout   30s;
    }
}